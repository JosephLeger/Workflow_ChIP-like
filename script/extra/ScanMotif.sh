#!/bin/env bash

################################################################################################################
### HELP -------------------------------------------------------------------------------------------------------
################################################################################################################
script_name='ScanMotif.sh'

# Get user id for custom manual pathways
usr=`id | sed -e 's@).*@@g' | sed -e 's@.*(@@g'`

# Text font variables
END='\033[0m'
BOLD='\033[1m'
UDL='\033[4m'

# Show command manual
Help()
{
echo -e "${BOLD}####### INDEXBAM MANUAL #######${END}\n\n\
${BOLD}SYNTHAX${END}\n\
	sh ${script_name} <fasta_file> <motif_file>\n\n\

${BOLD}DESCRIPTION${END}\n\
	Look for a specific DNA motif on the entire genome.\n\
	It generates a BED file containing corresponding regions and a TXT file containing full motif information.\n\n\
	
${BOLD}ARGUMENTS${END}\n\
	${BOLD}<fasta_file>${END}\n\
		Path to genome reference FASTA file.\n
		It can usually be downloaded from Ensembl genome browser.\n\n\
	${BOLD}<motif_file>${END}\n\
		Path to .motif file containing DNA motif to look for in provided genome.\n\
		This type of file is generated by HOMER or available online.\n\n\
   		
${BOLD}EXAMPLE USAGE${END}\n\
	sh ${script_name} ${BOLD}${usr}/Ref/Genome/Mus_musculus.GRCm39.dna_sm.primary_assembly.fa ${usr}/Ref/Motifs/Factor.motif${END}\n"
}

################################################################################################################
### ERRORS -----------------------------------------------------------------------------------------------------
################################################################################################################

if [ $# -eq 1 ] && [ $1 == "help" ]; then
	Help
	exit
elif [ $# -ne 2 ]; then
	# Error if arguments are missing
	echo "Error synthax : please use following synthax"
	echo "      sh ${script_name} [options] <fasta_file> <motif_file>"
	exit
fi

################################################################################################################
### SCRIPT -----------------------------------------------------------------------------------------------------
################################################################################################################

## SETUP - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Generate REPORT
echo '#' >> ./0K_REPORT.txt
date >> ./0K_REPORT.txt

Launch()
{
# Launch COMMAND while getting JOBID
JOBID=$(echo -e "#!/bin/bash \n\
#SBATCH --job-name=${JOBNAME} \n\
#SBATCH --output=%x_%j.out \n\
#SBATCH --error=%x_%j.err \n\
#SBATCH --time=${TIME} \n\
#SBATCH --nodes=${NODE} \n\
#SBATCH --ntasks=${TASK} \n\
#SBATCH --cpus-per-task=${CPU} \n\
#SBATCH --mem=${MEM} \n\
#SBATCH --qos=${QOS} \n\
source /home/${usr}/.bashrc \n\
micromamba activate Workflow_ChIP-like \n""${COMMAND}" | sbatch --parsable --clusters nautilus ${WAIT})
# Define JOBID and print launching message
JOBID=`echo ${JOBID} | sed -e "s@;.*@@g"` 
echo "Submitted batch job ${JOBID} on cluster nautilus"
# Fill in 0K_REPORT file
echo -e "${JOBNAME}_${JOBID}" >> ./0K_REPORT.txt
echo -e "${COMMAND}" | sed 's@^@   \| @' >> ./0K_REPORT.txt
}
# Define default waiting list for sbatch as empty
WAIT=''

## SCAN MOTIF - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
# Set up parameters for SLURM ressources
TIME='0-00:30:00'; NODE='1'; TASK='1'; CPU='1'; MEM='10g'; QOS='quick'

# Set variables for jobname
fasta=`echo ${1} | sed -e 's@.*\/@@g' | sed -e 's@\.fa\|\.fasta@@g'`
motif=`echo ${2} | sed -e 's@.*\/@@g' | sed -e 's@\.motif@@g'`
output="${motif}_in_${fasta}_sorted.txt"

# Define JOBNAME and COMMAND considering WAIT
JOBNAME="ScanMotif_${motif}_in_${fasta}"
COMMAND="scanMotifGenomeWide.pl ${2} ${1} > ${output} \n\
paste <(cat ${output} | cut -d $'\t' -f2 | sed -e 's@ .*@@g') <(cat ${output} | cut -f3,4) <(cat ${output} | cut -f1) <(cat ${output} | cut -f5,6) > ${motif}_in_${fasta}_sorted.bed"
Launch

